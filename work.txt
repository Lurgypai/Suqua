Network Model:
    There are two options for handling out-of-date inputs on the server:
        - Delay the server until an input is received from every client
            - Large amounts of overall delay
            - delay is determined by the slowest client
        - Process inputs as soon as they're received, (unless they're in the future)
            - constant desyncs
        
        I will implement a combination model, with a defined maximum wait time before inputs are rolled over
            - with wait time set to 0, it will function identically to a process inputs when received model
            - with wait time set to -1, it will function identically to an always wait model
            
    To simplify initial testing, I will not be using the delta based update system of Quake III, but simply sending full state updates to each client every time the server updates.
    I will design a simple smash like game for human as well as AI based testing, and load different player loads onto it. In summary
    Testing will be done both with ad without players being able to interact with each other
    Server:
        Wait specified time for all client inputs
        Update

        Send global state update out every T client ticks

    Client:
        Send inputs
        Apply inputs

        On receiving server state ->
            re-sync

    Tracked Data ->
        Ping
        Dropped inputs
        Delayed inputs
        Resync count
